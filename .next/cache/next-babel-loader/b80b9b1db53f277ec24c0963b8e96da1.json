{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Documents/cannon-demo/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport { scenarioOne, scenarioTwo, scenarioThree, initialData, oneMeasurement, annotations, config } from \"../utils/chartInfo\";\nimport \"chartjs-plugin-annotation\";\n\nconst Index = () => {\n  const {\n    0: scenarioOneShown,\n    1: setScenarioOneShown\n  } = useState(false);\n  const {\n    0: scenarioTwoShown,\n    1: setScenarioTwoShown\n  } = useState(false);\n  const {\n    0: scenarioThreeShown,\n    1: setScenarioThreeShown\n  } = useState(false);\n  const {\n    0: oneMeasurementShown,\n    1: setOneMeasurementShown\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(initialData);\n  const {\n    0: options,\n    1: setOptions\n  } = useState(config);\n  useEffect(() => {\n    document.addEventListener(\"keyup\", e => {\n      if (e.key === \"p\") {\n        console.log(\"p is pressed\");\n        applyOneMeasurement();\n      }\n    });\n  }, []); // useKeyPress(\n  //   \"Escape\",\n  //   () => {\n  //     const value = applyOneMeasurement(data);\n  //     console.log(\"updated is \", value);\n  //     setData(value);\n  //     console.log(\"updatedData is \", data);\n  //   },\n  //   data\n  // );\n  // learn arrow functions vs regular\n  // pass in the value\n  // return the updated data object\n\n  function applyOneMeasurement() {\n    console.log(scenarioTwoShown);\n\n    if (!oneMeasurementShown) {\n      console.log(data.datasets);\n      let updatedDatasets = [...data.datasets, oneMeasurement];\n      let updatedAnnotations = {\n        annotations: annotations\n      };\n      options.scales.xAxes.ticks = true;\n      let updatedScales = options.scales; // set xAxes and yAxes\n\n      updatedScales.xAxes[0].ticks.display = true;\n      updatedScales.yAxes[0].ticks.display = true;\n      setOptions(_objectSpread(_objectSpread({}, options), {}, {\n        scales: updatedScales,\n        annotation: updatedAnnotations\n      }));\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n    }\n  }\n\n  const toggleScenarioOne = () => {\n    if (!scenarioOneShown) {\n      let updatedDatasets = [...data.datasets, scenarioOne];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioOneShown(true);\n    }\n\n    const updatedDatasets = data.datasets.filter(dataset => {\n      return dataset.label !== \"Typical curve\";\n    });\n    console.log(data.datasets);\n    setScenarioOneShown(false);\n  };\n\n  const applyScenarioTwo = () => {\n    if (!scenarioTwoShown) {\n      let updatedDatasets = [...data.datasets, scenarioTwo];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioTwoShown(true);\n    }\n  };\n\n  const applyScenarioThree = () => {\n    if (!scenarioThreeShown) {\n      let updatedDatasets = [...data.datasets, scenarioThree];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioThreeShown(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      meta: /*#__PURE__*/_jsxDEV(Meta, {\n        title: \"Cannon Demonstrative\",\n        description: \"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-16 mt-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: data,\n            width: 600,\n            height: 300,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center w-full mt-6 text-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"typical\",\n            className: \"px-4 focus:outline-none focus:ring py-2 font-semibold bg-transparent border rounded hover:text-white transition duration-300 ease-in-out  \" + (!scenarioOneShown ? \"opacity-25 text-green-700 border-green-500 hover:bg-green-500 hover:border-transparent\" : \"text-white bg-green-500 border-green-500 hover:border-transparent \"),\n            onClick: () => toggleScenarioOne(),\n            children: \"Typical Curve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"possible1\",\n            className: \"transition focus:outline-none focus:ring outline-none duration-300 ease-in-out px-4 py-2 mx-16 font-semibold bg-transparent border rounded hover:text-white  \" + (!scenarioTwoShown ? \"opacity-25 text-blue-700 border-blue-500 hover:bg-blue-500 hover:border-transparent\" : \"text-white bg-blue-500 border-blue-500 hover:border-transparent \"),\n            onClick: () => applyScenarioTwo(),\n            children: \"Possible Curve #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"possible2\",\n            className: \"transition focus:outline-none focus:ring outline-none duration-300 ease-in-out px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" + (!scenarioThreeShown ? \"opacity-25 text-red-700 border-red-500 hover:bg-red-500 hover:border-transparent\" : \"text-white bg-red-500 border-red-500 hover:border-transparent \"),\n            onClick: () => applyScenarioThree(),\n            children: \"Possible Curve #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jacob/Documents/cannon-demo/src/pages/index.tsx"],"names":["React","useState","useEffect","Meta","Main","Line","scenarioOne","scenarioTwo","scenarioThree","initialData","oneMeasurement","annotations","config","Index","scenarioOneShown","setScenarioOneShown","scenarioTwoShown","setScenarioTwoShown","scenarioThreeShown","setScenarioThreeShown","oneMeasurementShown","setOneMeasurementShown","data","setData","options","setOptions","document","addEventListener","e","key","console","log","applyOneMeasurement","datasets","updatedDatasets","updatedAnnotations","scales","xAxes","ticks","updatedScales","display","yAxes","annotation","toggleScenarioOne","filter","dataset","label","applyScenarioTwo","applyScenarioThree"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  scenarioOne,\n  scenarioTwo,\n  scenarioThree,\n  initialData,\n  oneMeasurement,\n  annotations,\n  config,\n} from \"../utils/chartInfo\";\nimport useKeyPress from \"../hooks/useKeyPress\";\nimport \"chartjs-plugin-annotation\";\n\nconst Index = () => {\n  const [scenarioOneShown, setScenarioOneShown] = useState(false);\n  const [scenarioTwoShown, setScenarioTwoShown] = useState(false);\n  const [scenarioThreeShown, setScenarioThreeShown] = useState(false);\n  const [oneMeasurementShown, setOneMeasurementShown] = useState(false);\n  const [data, setData] = useState(initialData);\n  const [options, setOptions] = useState(config);\n\n  useEffect(() => {\n    document.addEventListener(\"keyup\", (e) => {\n      if (e.key === \"p\") {\n        console.log(\"p is pressed\");\n        applyOneMeasurement();\n      }\n    });\n  }, []);\n\n  // useKeyPress(\n  //   \"Escape\",\n  //   () => {\n  //     const value = applyOneMeasurement(data);\n  //     console.log(\"updated is \", value);\n  //     setData(value);\n  //     console.log(\"updatedData is \", data);\n  //   },\n  //   data\n  // );\n  // learn arrow functions vs regular\n  // pass in the value\n  // return the updated data object\n\n  function applyOneMeasurement() {\n    console.log(scenarioTwoShown);\n    if (!oneMeasurementShown) {\n      console.log(data.datasets);\n      let updatedDatasets = [...data.datasets, oneMeasurement];\n      let updatedAnnotations = {\n        annotations: annotations,\n      };\n      options.scales.xAxes.ticks = true;\n      let updatedScales = options.scales;\n      // set xAxes and yAxes\n      updatedScales.xAxes[0].ticks.display = true;\n      updatedScales.yAxes[0].ticks.display = true;\n      setOptions({\n        ...options,\n        scales: updatedScales,\n        annotation: updatedAnnotations,\n      });\n\n      setData({ ...data, datasets: updatedDatasets });\n    }\n  }\n\n  const toggleScenarioOne = () => {\n    if (!scenarioOneShown) {\n      let updatedDatasets = [...data.datasets, scenarioOne];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioOneShown(true);\n    }\n    const updatedDatasets = data.datasets.filter((dataset) => {\n      return dataset.label !== \"Typical curve\";\n    });\n    console.log(data.datasets);\n    setScenarioOneShown(false);\n  };\n\n  const applyScenarioTwo = () => {\n    if (!scenarioTwoShown) {\n      let updatedDatasets = [...data.datasets, scenarioTwo];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioTwoShown(true);\n    }\n  };\n\n  const applyScenarioThree = () => {\n    if (!scenarioThreeShown) {\n      let updatedDatasets = [...data.datasets, scenarioThree];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioThreeShown(true);\n    }\n  };\n\n  return (\n    <div>\n      <Main\n        meta={\n          <Meta\n            title=\"Cannon Demonstrative\"\n            description=\"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n          />\n        }\n      >\n        <div className=\"mx-16 mt-20\">\n          <div className=\"flex w-full\">\n            <Line data={data} width={600} height={300} options={options}></Line>\n          </div>\n          <div className=\"flex justify-center w-full mt-6 text-xl\">\n            <button\n              id=\"typical\"\n              className={\n                \"px-4 focus:outline-none focus:ring py-2 font-semibold bg-transparent border rounded hover:text-white transition duration-300 ease-in-out  \" +\n                (!scenarioOneShown\n                  ? \"opacity-25 text-green-700 border-green-500 hover:bg-green-500 hover:border-transparent\"\n                  : \"text-white bg-green-500 border-green-500 hover:border-transparent \")\n              }\n              onClick={() => toggleScenarioOne()}\n            >\n              Typical Curve\n            </button>\n            <button\n              id=\"possible1\"\n              className={\n                \"transition focus:outline-none focus:ring outline-none duration-300 ease-in-out px-4 py-2 mx-16 font-semibold bg-transparent border rounded hover:text-white  \" +\n                (!scenarioTwoShown\n                  ? \"opacity-25 text-blue-700 border-blue-500 hover:bg-blue-500 hover:border-transparent\"\n                  : \"text-white bg-blue-500 border-blue-500 hover:border-transparent \")\n              }\n              onClick={() => applyScenarioTwo()}\n            >\n              Possible Curve #1\n            </button>\n            <button\n              id=\"possible2\"\n              className={\n                \"transition focus:outline-none focus:ring outline-none duration-300 ease-in-out px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" +\n                (!scenarioThreeShown\n                  ? \"opacity-25 text-red-700 border-red-500 hover:bg-red-500 hover:border-transparent\"\n                  : \"text-white bg-red-500 border-red-500 hover:border-transparent \")\n              }\n              onClick={() => applyScenarioThree()}\n            >\n              Possible Curve #2\n            </button>\n          </div>\n        </div>\n      </Main>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}