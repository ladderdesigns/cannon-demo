{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jacob/Documents/cannon-demo/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport { scenarioOne, scenarioTwo, scenarioThree } from \"../utils/chartInfo\";\nvar options = {\n  title: {\n    display: true,\n    text: \"BAC Analysis - Robert Cannon M.D.\",\n    fontSize: 24,\n    fontFamily: \"'Helvetica'\"\n  },\n  scales: {\n    xAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: \"Known Times (AM)\"\n      },\n      ticks: {\n        callback: function callback(value, index, values) {\n          if (value === \"2:58 AM\") {\n            return value;\n          }\n        }\n      }\n    }],\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: \"Blood Alcohol Concentration (g/ml)\"\n      },\n      ticks: {\n        callback: function callback(value, index, values) {}\n      }\n    }]\n  }\n};\nvar initialData = {\n  labels: [\"(time unknown)\", \"12:42 AM\", \"(time unknown)\", \"2:58 AM\", \"(time unknown)\", \"(time unknown)\"],\n  datasets: [{\n    data: [null, null, null, 0.16, null, null],\n    label: \"Genesis Petrillo\",\n    backgroundColor: \"#374151\",\n    borderColor: \"#374151\",\n    fill: false\n  }]\n};\n\nvar Index = function Index() {\n  _s();\n\n  var applyScenarioOne = function applyScenarioOne() {\n    if (!data.datasets.some(function (scenario) {\n      return scenario.label == \"Medium\";\n    })) {\n      var updatedDatasets = [].concat(_toConsumableArray(data.datasets), [scenarioOne]);\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      console.log(data.datasets);\n    }\n  };\n\n  var applyScenarioTwo = function applyScenarioTwo() {\n    if (!data.datasets.some(function (scenario) {\n      return scenario.label == \"Low\";\n    })) {\n      var updatedDatasets = [].concat(_toConsumableArray(data.datasets), [scenarioTwo]);\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      console.log(data.datasets);\n    }\n  };\n\n  var applyScenarioThree = function applyScenarioThree() {\n    if (!data.datasets.some(function (scenario) {\n      return scenario.label == \"High\";\n    })) {\n      var updatedDatasets = [].concat(_toConsumableArray(data.datasets), [scenarioThree]);\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      console.log(data.datasets);\n    }\n  };\n\n  var _useState = useState(initialData),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    // only add user preferences if the user has logged in\n    console.log(\"data has changed\");\n  }, [data.datasets]);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    meta: /*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Cannon Demonstrative\",\n      description: \"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, _this),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-20\",\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center w-full h-16 font-sans \",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mx-16 text-sm text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\",\n          onClick: function onClick() {\n            return applyScenarioOne();\n          },\n          children: \"Scenario One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-1 mx-16 text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\",\n          onClick: function onClick() {\n            return applyScenarioTwo();\n          },\n          children: \"Scenario Two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-1 mx-16 text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\",\n          onClick: function onClick() {\n            return applyScenarioThree();\n          },\n          children: \"Scenario Three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"A2wpUDj2vsVhzBQraLwic4bnRJI=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/jacob/Documents/cannon-demo/src/pages/index.tsx"],"names":["React","useState","useEffect","Meta","Main","Line","scenarioOne","scenarioTwo","scenarioThree","options","title","display","text","fontSize","fontFamily","scales","xAxes","scaleLabel","labelString","ticks","callback","value","index","values","yAxes","initialData","labels","datasets","data","label","backgroundColor","borderColor","fill","Index","applyScenarioOne","some","scenario","updatedDatasets","setData","console","log","applyScenarioTwo","applyScenarioThree"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,oBAAxD;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,IAAI,EAAE,mCAFD;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE;AAJP,GADO;AAOdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,UAAU,EAAE;AACVN,QAAAA,OAAO,EAAE,IADC;AAEVO,QAAAA,WAAW,EAAE;AAFH,OADd;AAKEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAChD,cAAIF,KAAK,KAAK,SAAd,EAAyB;AACvB,mBAAOA,KAAP;AACD;AACF;AALI;AALT,KADK,CADD;AAgBNG,IAAAA,KAAK,EAAE,CACL;AACEP,MAAAA,UAAU,EAAE;AACVN,QAAAA,OAAO,EAAE,IADC;AAEVO,QAAAA,WAAW,EAAE;AAFH,OADd;AAKEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC,CAAE;AADvC;AALT,KADK;AAhBD;AAPM,CAAhB;AAqCA,IAAME,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,CACN,gBADM,EAEN,UAFM,EAGN,gBAHM,EAIN,SAJM,EAKN,gBALM,EAMN,gBANM,CADU;AASlBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADR;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,eAAe,EAAE,SAHnB;AAIEC,IAAAA,WAAW,EAAE,SAJf;AAKEC,IAAAA,IAAI,EAAE;AALR,GADQ;AATQ,CAApB;;AAoBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI,CAACN,IAAI,CAACD,QAAL,CAAcQ,IAAd,CAAmB,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACP,KAAT,IAAkB,QAAhC;AAAA,KAAnB,CAAL,EAAmE;AACjE,UAAIQ,eAAe,gCAAOT,IAAI,CAACD,QAAZ,IAAsBrB,WAAtB,EAAnB;AACAgC,MAAAA,OAAO,iCAAMV,IAAN;AAAYD,QAAAA,QAAQ,EAAEU;AAAtB,SAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACD,QAAjB;AACD;AACF,GAND;;AAQA,MAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI,CAACb,IAAI,CAACD,QAAL,CAAcQ,IAAd,CAAmB,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACP,KAAT,IAAkB,KAAhC;AAAA,KAAnB,CAAL,EAAgE;AAC9D,UAAIQ,eAAe,gCAAOT,IAAI,CAACD,QAAZ,IAAsBpB,WAAtB,EAAnB;AACA+B,MAAAA,OAAO,iCAAMV,IAAN;AAAYD,QAAAA,QAAQ,EAAEU;AAAtB,SAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACD,QAAjB;AACD;AACF,GAND;;AAQA,MAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAI,CAACd,IAAI,CAACD,QAAL,CAAcQ,IAAd,CAAmB,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACP,KAAT,IAAkB,MAAhC;AAAA,KAAnB,CAAL,EAAiE;AAC/D,UAAIQ,eAAe,gCAAOT,IAAI,CAACD,QAAZ,IAAsBnB,aAAtB,EAAnB;AACA8B,MAAAA,OAAO,iCAAMV,IAAN;AAAYD,QAAAA,QAAQ,EAAEU;AAAtB,SAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACD,QAAjB;AACD;AACF,GAND;;AAjBkB,kBAyBM1B,QAAQ,CAACwB,WAAD,CAzBd;AAAA,MAyBXG,IAzBW;AAAA,MAyBLU,OAzBK;;AA2BlBpC,EAAAA,SAAS,CAAC,YAAM;AACd;AACAqC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAHQ,EAGN,CAACZ,IAAI,CAACD,QAAN,CAHM,CAAT;AAKA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,eACF,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,sBADR;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEC,IAAZ;AAAkB,QAAA,OAAO,EAAEnB;AAA3B;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,0EADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMyB,gBAAgB,EAAtB;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAOE;AACE,UAAA,SAAS,EAAC,4EADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMO,gBAAgB,EAAtB;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAaE;AACE,UAAA,SAAS,EAAC,4EADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMC,kBAAkB,EAAxB;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,eA+BE;AAAA;AAAA;AAAA;AAAA,aA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CAnED;;GAAMT,K;;KAAAA,K;AAqEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport { scenarioOne, scenarioTwo, scenarioThree } from \"../utils/chartInfo\";\n\nconst options = {\n  title: {\n    display: true,\n    text: \"BAC Analysis - Robert Cannon M.D.\",\n    fontSize: 24,\n    fontFamily: \"'Helvetica'\",\n  },\n  scales: {\n    xAxes: [\n      {\n        scaleLabel: {\n          display: true,\n          labelString: \"Known Times (AM)\",\n        },\n        ticks: {\n          callback: function (value: String, index, values) {\n            if (value === \"2:58 AM\") {\n              return value;\n            }\n          },\n        },\n      },\n    ],\n    yAxes: [\n      {\n        scaleLabel: {\n          display: true,\n          labelString: \"Blood Alcohol Concentration (g/ml)\",\n        },\n        ticks: {\n          callback: function (value, index, values) {},\n        },\n      },\n    ],\n  },\n};\n\nconst initialData = {\n  labels: [\n    \"(time unknown)\",\n    \"12:42 AM\",\n    \"(time unknown)\",\n    \"2:58 AM\",\n    \"(time unknown)\",\n    \"(time unknown)\",\n  ],\n  datasets: [\n    {\n      data: [null, null, null, 0.16, null, null],\n      label: \"Genesis Petrillo\",\n      backgroundColor: \"#374151\",\n      borderColor: \"#374151\",\n      fill: false,\n    },\n  ],\n};\n\nconst Index = () => {\n  const applyScenarioOne = () => {\n    if (!data.datasets.some((scenario) => scenario.label == \"Medium\")) {\n      let updatedDatasets = [...data.datasets, scenarioOne];\n      setData({ ...data, datasets: updatedDatasets });\n      console.log(data.datasets);\n    }\n  };\n\n  const applyScenarioTwo = () => {\n    if (!data.datasets.some((scenario) => scenario.label == \"Low\")) {\n      let updatedDatasets = [...data.datasets, scenarioTwo];\n      setData({ ...data, datasets: updatedDatasets });\n      console.log(data.datasets);\n    }\n  };\n\n  const applyScenarioThree = () => {\n    if (!data.datasets.some((scenario) => scenario.label == \"High\")) {\n      let updatedDatasets = [...data.datasets, scenarioThree];\n      setData({ ...data, datasets: updatedDatasets });\n      console.log(data.datasets);\n    }\n  };\n\n  const [data, setData] = useState(initialData);\n\n  useEffect(() => {\n    // only add user preferences if the user has logged in\n    console.log(\"data has changed\");\n  }, [data.datasets]);\n\n  return (\n    <Main\n      meta={\n        <Meta\n          title=\"Cannon Demonstrative\"\n          description=\"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n        />\n      }\n    >\n      <div className=\"m-20\">\n        <Line data={data} options={options}></Line>\n        <div className=\"flex justify-center w-full h-16 font-sans \">\n          <button\n            className=\"mx-16 text-sm text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\"\n            onClick={() => applyScenarioOne()}\n          >\n            Scenario One\n          </button>\n          <button\n            className=\"px-4 py-1 mx-16 text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\"\n            onClick={() => applyScenarioTwo()}\n          >\n            Scenario Two\n          </button>\n          <button\n            className=\"px-4 py-1 mx-16 text-white bg-blue-500 rounded-md shadow hover:bg-blue-600\"\n            onClick={() => applyScenarioThree()}\n          >\n            Scenario Three\n          </button>\n        </div>\n      </div>\n      <div></div>\n    </Main>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}