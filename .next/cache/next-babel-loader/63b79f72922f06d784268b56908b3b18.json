{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacob/Documents/cannon-demo/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport { scenarioOne, scenarioTwo, scenarioThree } from \"../utils/chartInfo\";\nconst options = {\n  responsive: true,\n  maintainAspectRatio: true,\n  title: {\n    display: true,\n    text: \"BAC Analysis - Robert Cannon M.D.\",\n    fontSize: 26,\n    fontFamily: \"'Helvetica'\",\n    fontColor: \"#374151http://127.0.0.1:4040  \"\n  },\n  plugins: {\n    annotation: {\n      drawTime: \"afterDatasetsDraw\",\n      annotations: {\n        first: {\n          type: \"line\",\n          scaleID: \"y\",\n          value: 0.1,\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true\n          }\n        },\n        second: {\n          type: \"line\",\n          scaleID: \"x\",\n          value: \"May\",\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true\n          }\n        },\n        third: {\n          type: \"line\",\n\n          display(context) {\n            return context.chart.data.datasets.length > 0 ? context.chart.isDatasetVisible(0) : false;\n          },\n\n          scaleID: \"x\",\n          value: \"June\",\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true,\n            rotation: -90\n          }\n        },\n        fourth: {\n          drawTime: \"beforeDatasetsDraw\",\n          type: \"box\",\n          xScaleID: \"x\",\n          yScaleID: \"y\",\n          xMin: \"February\",\n          xMax: \"April\",\n          yMin: 0.2,\n          yMax: 0.3,\n          backgroundColor: \"rgba(101, 33, 171, 0.5)\",\n          borderColor: \"rgb(101, 33, 171)\",\n          borderWidth: 1\n        }\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: \"Known Times (AM)\"\n      }\n    }],\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: \"Blood Alcohol Concentration (g/ml)\"\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          if (value === 0.16) {\n            return value;\n          }\n        }\n      }\n    }]\n  }\n};\nconst initialData = {\n  labels: [\"(time unknown)\", \"12:42 AM\", \"(time unknown)\", \"2:58 AM\", \"(time unknown)\", \"(time unknown)\"],\n  datasets: [{\n    data: [null, null, null, 0.16, null, null],\n    label: \"One measurement\",\n    backgroundColor: \"#78350F\",\n    borderColor: \"#78350F\",\n    fill: false,\n    pointRadius: [0, 0, 0, 7, 0],\n    pointHoverBorderWidth: [0, 0, 0, 8, 0]\n  }]\n};\n\nconst Index = () => {\n  const {\n    0: scenarioOneShown,\n    1: setScenarioOneShown\n  } = useState(false);\n  const {\n    0: scenarioTwoShown,\n    1: setScenarioTwoShown\n  } = useState(false);\n  const {\n    0: scenarioThreeShown,\n    1: setScenarioThreeShown\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(initialData);\n\n  const applyScenarioOne = () => {\n    if (!scenarioOneShown) {\n      let updatedDatasets = [...data.datasets, scenarioOne];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioOneShown(true);\n    }\n  };\n\n  const applyScenarioTwo = () => {\n    if (!scenarioTwoShown) {\n      let updatedDatasets = [...data.datasets, scenarioTwo];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioTwoShown(true);\n    }\n  };\n\n  const applyScenarioThree = () => {\n    if (!scenarioThreeShown) {\n      let updatedDatasets = [...data.datasets, scenarioThree];\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: updatedDatasets\n      }));\n      setScenarioThreeShown(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    meta: /*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Cannon Demonstrative\",\n      description: \"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-16 my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          width: 600,\n          height: 280,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center w-full mt-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" + (!scenarioOneShown ? \"opacity-25 text-green-700 border-green-500 hover:bg-green-500 hover:border-transparent\" : \"text-white bg-green-500 border-green-500 hover:border-transparent \"),\n          onClick: () => applyScenarioOne(),\n          children: \"Scenario one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 mx-16 font-semibold bg-transparent border rounded hover:text-white  \" + (!scenarioTwoShown ? \"opacity-25 text-blue-700 border-blue-500 hover:bg-blue-500 hover:border-transparent\" : \"text-white bg-blue-500 border-blue-500 hover:border-transparent \"),\n          onClick: () => applyScenarioTwo(),\n          children: \"Scenario two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" + (!scenarioThreeShown ? \"opacity-25 text-red-700 border-red-500 hover:bg-red-500 hover:border-transparent\" : \"text-white bg-red-500 border-red-500 hover:border-transparent \"),\n          onClick: () => applyScenarioThree(),\n          children: \"Scenario three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jacob/Documents/cannon-demo/src/pages/index.tsx"],"names":["React","useState","Meta","Main","Line","scenarioOne","scenarioTwo","scenarioThree","options","responsive","maintainAspectRatio","title","display","text","fontSize","fontFamily","fontColor","plugins","annotation","drawTime","annotations","first","type","scaleID","value","borderColor","borderWidth","label","backgroundColor","content","enabled","second","third","context","chart","data","datasets","length","isDatasetVisible","rotation","fourth","xScaleID","yScaleID","xMin","xMax","yMin","yMax","scales","xAxes","scaleLabel","labelString","yAxes","ticks","callback","index","values","initialData","labels","fill","pointRadius","pointHoverBorderWidth","Index","scenarioOneShown","setScenarioOneShown","scenarioTwoShown","setScenarioTwoShown","scenarioThreeShown","setScenarioThreeShown","setData","applyScenarioOne","updatedDatasets","applyScenarioTwo","applyScenarioThree"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Meta } from \"../layout/Meta\";\nimport { Main } from \"../templates/Main\";\nimport { Line } from \"react-chartjs-2\";\nimport { scenarioOne, scenarioTwo, scenarioThree } from \"../utils/chartInfo\";\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: true,\n\n  title: {\n    display: true,\n    text: \"BAC Analysis - Robert Cannon M.D.\",\n    fontSize: 26,\n    fontFamily: \"'Helvetica'\",\n    fontColor: \"#374151http://127.0.0.1:4040  \",\n  },\n  plugins: {\n    annotation: {\n      drawTime: \"afterDatasetsDraw\",\n      annotations: {\n        first: {\n          type: \"line\",\n          scaleID: \"y\",\n          value: 0.1,\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true,\n          },\n        },\n        second: {\n          type: \"line\",\n          scaleID: \"x\",\n          value: \"May\",\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true,\n          },\n        },\n        third: {\n          type: \"line\",\n          display(context) {\n            return context.chart.data.datasets.length > 0\n              ? context.chart.isDatasetVisible(0)\n              : false;\n          },\n          scaleID: \"x\",\n          value: \"June\",\n          borderColor: \"black\",\n          borderWidth: 5,\n          label: {\n            backgroundColor: \"red\",\n            content: \"Test Label\",\n            enabled: true,\n            rotation: -90,\n          },\n        },\n        fourth: {\n          drawTime: \"beforeDatasetsDraw\",\n          type: \"box\",\n          xScaleID: \"x\",\n          yScaleID: \"y\",\n          xMin: \"February\",\n          xMax: \"April\",\n          yMin: 0.2,\n          yMax: 0.3,\n          backgroundColor: \"rgba(101, 33, 171, 0.5)\",\n          borderColor: \"rgb(101, 33, 171)\",\n          borderWidth: 1,\n        },\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        scaleLabel: {\n          display: true,\n          labelString: \"Known Times (AM)\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        scaleLabel: {\n          display: true,\n          labelString: \"Blood Alcohol Concentration (g/ml)\",\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            if (value === 0.16) {\n              return value;\n            }\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst initialData = {\n  labels: [\n    \"(time unknown)\",\n    \"12:42 AM\",\n    \"(time unknown)\",\n    \"2:58 AM\",\n    \"(time unknown)\",\n    \"(time unknown)\",\n  ],\n  datasets: [\n    {\n      data: [null, null, null, 0.16, null, null],\n      label: \"One measurement\",\n      backgroundColor: \"#78350F\",\n      borderColor: \"#78350F\",\n      fill: false,\n      pointRadius: [0, 0, 0, 7, 0],\n      pointHoverBorderWidth: [0, 0, 0, 8, 0],\n    },\n  ],\n};\n\nconst Index = () => {\n  const [scenarioOneShown, setScenarioOneShown] = useState(false);\n  const [scenarioTwoShown, setScenarioTwoShown] = useState(false);\n  const [scenarioThreeShown, setScenarioThreeShown] = useState(false);\n  const [data, setData] = useState(initialData);\n\n  const applyScenarioOne = () => {\n    if (!scenarioOneShown) {\n      let updatedDatasets = [...data.datasets, scenarioOne];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioOneShown(true);\n    }\n  };\n\n  const applyScenarioTwo = () => {\n    if (!scenarioTwoShown) {\n      let updatedDatasets = [...data.datasets, scenarioTwo];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioTwoShown(true);\n    }\n  };\n\n  const applyScenarioThree = () => {\n    if (!scenarioThreeShown) {\n      let updatedDatasets = [...data.datasets, scenarioThree];\n      setData({ ...data, datasets: updatedDatasets });\n      setScenarioThreeShown(true);\n    }\n  };\n\n  return (\n    <Main\n      meta={\n        <Meta\n          title=\"Cannon Demonstrative\"\n          description=\"The demonstrative for Dr. Robert Cannon - Gardner Consulting.\"\n        />\n      }\n    >\n      <div className=\"mx-16 my-10\">\n        <div className=\"flex w-full\">\n          <Line data={data} width={600} height={280} options={options}></Line>\n        </div>\n        <div className=\"flex justify-center w-full mt-12\">\n          <button\n            className={\n              \"px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" +\n              (!scenarioOneShown\n                ? \"opacity-25 text-green-700 border-green-500 hover:bg-green-500 hover:border-transparent\"\n                : \"text-white bg-green-500 border-green-500 hover:border-transparent \")\n            }\n            onClick={() => applyScenarioOne()}\n          >\n            Scenario one\n          </button>\n          <button\n            className={\n              \"px-4 py-2 mx-16 font-semibold bg-transparent border rounded hover:text-white  \" +\n              (!scenarioTwoShown\n                ? \"opacity-25 text-blue-700 border-blue-500 hover:bg-blue-500 hover:border-transparent\"\n                : \"text-white bg-blue-500 border-blue-500 hover:border-transparent \")\n            }\n            onClick={() => applyScenarioTwo()}\n          >\n            Scenario two\n          </button>\n          <button\n            className={\n              \"px-4 py-2 font-semibold bg-transparent border rounded hover:text-white  \" +\n              (!scenarioThreeShown\n                ? \"opacity-25 text-red-700 border-red-500 hover:bg-red-500 hover:border-transparent\"\n                : \"text-white bg-red-500 border-red-500 hover:border-transparent \")\n            }\n            onClick={() => applyScenarioThree()}\n          >\n            Scenario three\n          </button>\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}